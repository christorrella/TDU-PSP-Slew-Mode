_S ULUS-10249
_G Test Drive Unlimited

_C0 Slew Mode (Right on D-Pad; use Circle, Square, Analog Stick)

// created by Christopher Torrella
// dedicated to my late Father who bought me Test Drive Unlimited when I was a kid. Love you, Dad.

// Override player positional coordinate addition instructions; instead, jump to custom X/Z/Y funcs
_L 0x203C6DD8 0x0A200008    // x
_L 0x203C6DF8 0x0A200031    // z
_L 0x203C6E10 0x0A200058    // y

// Slew speed has 4 bytes reserved space at 0x08800000

// Button status address table
_L 0x20000004 0x09621F4C    // address of TCS Mode status
_L 0x20000008 0x09350444    // address of analog left status
_L 0x2000000C 0x093503F0    // address of analog right status
_L 0x20000010 0x093501A4    // address of circle status
_L 0x20000014 0x093500FC    // address of square status
_L 0x20000018 0x0935039C    // address of analog up status
_L 0x2000001C 0x09350348    // address of analog down status

// Start of control functions

// Custom Function for Player Position X Coordinate

// Write slew speed as 1x in reserved space
_L 0x20000020 0x3C010880    // lui  at,0x880
_L 0x20000024 0x3C0E3F80    // lui  t6,0x3f80
_L 0x20000028 0xAC2E0000    // sw   t6, 0x0(at)

// If TCS is 1, jump to Check Analog Left
_L 0x2000002C 0x8C210004    // lw   at,0x4(at)
_L 0x20000030 0x802E0000    // lb   t6,0x0(at)
_L 0x20000034 0x20010001    // li   at,0x1
_L 0x20000038 0x11C1000D    // beq  t6,at,Check Analog Left
_L 0x2000003C 0x00000000    // nop

// Write slew speed as 5x in reserved space
_L 0x20000040 0x3C010880    // lui  at,0x880
_L 0x20000044 0x3C0E40A0    // lui  t6,0x40a0
_L 0x20000048 0xAC2E0000    // sw   t6, 0x0(at)

// If TCS is 2, jump to Check Analog Left
_L 0x2000004C 0x8C210004    // lw   at,0x4(at)
_L 0x20000050 0x802E0000    // lb   t6,0x0(at)
_L 0x20000054 0x20010002    // li   at,0x2
_L 0x20000058 0x11C10005    // beq  t6,at,Check Analog Left
_L 0x2000005C 0x00000000    // nop

// Add the two numbers in fx, fy
_L 0x20000060 0x46020000    // add.s    f0,f0,f2

// Restore at, jump to X
_L 0x20000064 0x3C010000    // lui  at,0x0
_L 0x20000068 0x0A2F1B77    // j    0x08BC6DDC
_L 0x2000006C 0x00000000    // nop

// Check Analog Left
_L 0x20000070 0x3C010880    // lui  at,0x880
_L 0x20000074 0x8C210008    // lw   at,0x08(at)
_L 0x20000078 0x802E0000    // lb   t6,0x0(at)
_L 0x2000007C 0x20010005    // li   at,0x5
_L 0x20000080 0x11C10004    // beq  t6,at,Check Analog Right
_L 0x20000084 0x00000000    // nop
_L 0x20000088 0x3C010880    // lui  at,0x880
_L 0x2000008C 0xC4220000    // lwc1 f2,0x0(at)
_L 0x20000090 0x46020000    // add.s    f0,f0,f2

// Check Analog Right
_L 0x20000094 0x3C010880    // lui  at,0x880
_L 0x20000098 0x8C21000C    // lw   at,0x0C(at)
_L 0x2000009C 0x802E0000    // lb   t6,0x0(at)
_L 0x200000A0 0x20010001    // li   at,0x1
_L 0x200000A4 0x11C10004    // beq  t6,at,Return To X
_L 0x200000A8 0x00000000    // nop
_L 0x200000AC 0x3C010880    // lui  at,0x880
_L 0x200000B0 0xC4220000    // lwc1 f2,0x0(at)
_L 0x200000B4 0x46020001    // sub.s    f0,f0,f2

// Return To X
_L 0x200000B8 0x3C010000    // lui  at,0x0
_L 0x200000BC 0x0A2F1B77    // j    0x08BC6DDC
_L 0x200000C0 0x00000000    // nop

// Custom Function for Player Position Z Coordinate

// Write slew speed as 1x in reserved space
_L 0x200000C4 0x3C010880    // lui  at,0x880
_L 0x200000C8 0x3C0E3F80    // lui  t6,0x3f80
_L 0x200000CC 0xAC2E0000    // sw   t6, 0x0(at)

// If TCS is 1, jump to Check Circle
_L 0x200000D0 0x8C210004    // lw   at,0x4(at)
_L 0x200000D4 0x802E0000    // lb   t6,0x0(at)
_L 0x200000D8 0x20010001    // li   at,0x1
_L 0x200000DC 0x11C1000D    // beq  t6,at,Check Circle
_L 0x200000E0 0x00000000    // nop

// Write slew speed as 5x in reserved space
_L 0x200000E4 0x3C010880    // lui  at,0x880
_L 0x200000E8 0x3C0E40A0    // lui  t6,0x40a0
_L 0x200000EC 0xAC2E0000    // sw   t6, 0x0(at)

// If TCS is 2, jump to Check Circle
_L 0x200000F0 0x8C210004    // lw   at,0x4(at)
_L 0x200000F4 0x802E0000    // lb   t6,0x0(at)
_L 0x200000F8 0x20010002    // li   at,0x2
_L 0x200000FC 0x11C10005    // beq  t6,at,Check Circle
_L 0x20000100 0x00000000    // nop

// Add the two numbers in fx fy
_L 0x20000104 0x46031080    // add.s f2,f2,f3

// Restore at, jump to Z
_L 0x20000108 0x3C010000    // lui  at,0x0
_L 0x2000010C 0x0A2F1B7F    // j    0x08BC6DFC
_L 0x20000110 0x00000000    // nop

// Check Circle
_L 0x20000114 0x3C010880    // lui  at,0x880
_L 0x20000118 0x8C210010    // lw   at,0x10(at)
_L 0x2000011C 0x802E0000    // lb   t6,0x0(at)
_L 0x20000120 0x11C00004    // beq  t6,zero,Check Square
_L 0x20000124 0x00000000    // nop
_L 0x20000128 0x3C010880    // lui  at,0x880
_L 0x2000012C 0xC4230000    // lwc1 f3,0x0(at)
_L 0x20000130 0x46031080    // add.s    f2,f2,f3

// Check Square
_L 0x20000134 0x3C010880    // lui at,0x880
_L 0x20000138 0x8C210014    // lw at,0x14(at)
_L 0x2000013C 0x802E0000    // lb t6,0x0(at)
_L 0x20000140 0x11C00004    // beq t6,zero,Return To Z
_L 0x20000144 0x00000000    // nop
_L 0x20000148 0x3C010880    // lui at,0x880
_L 0x2000014C 0xC4230000    // lwc1 f3,0x0(at)
_L 0x20000150 0x46031081    // sub.s f2,f2,f3

// Return To Z
_L 0x20000154 0x3C010000    // lui at,0x0
_L 0x20000158 0x0A2F1B7F    // j 0x08BC6DFC
_L 0x2000015C 0x00000000    // nop

// Custom Function for Player Position Y Coordinate

// Write slew speed as 1x in reserved space
_L 0x20000160 0x3C010880     // lui at,0x880
_L 0x20000164 0x3C0E3F80     // lui t6,0x3f80
_L 0x20000168 0xAC2E0000     // sw t6, 0x0(at)

// If TCS is 1, jump to Check Analog Up
_L 0x2000016C 0x8C210004    // lw at,0x4(at)
_L 0x20000170 0x802E0000    // lb t6,0x0(at)
_L 0x20000174 0x20010001    // li at,0x1
_L 0x20000178 0x11C1000D    // beq t6,at,Check Analog Up
_L 0x2000017C 0x00000000    // nop

// Write slew speed as 5x in reserved space
_L 0x20000180 0x3C010880     // lui at,0x880
_L 0x20000184 0x3C0E40A0     // lui t6,0x40a0
_L 0x20000188 0xAC2E0000     // sw t6, 0x0(at)

// If TCS is 2, jump to Check Analog Up
_L 0x2000018C 0x8C210004    // lw at,0x4(at)
_L 0x20000190 0x802E0000    // lb t6,0x0(at)
_L 0x20000194 0x20010002    // li at,0x2
_L 0x20000198 0x11C10005    // beq t6,at,Check Analog Up
_L 0x2000019C 0x00000000    // nop

// Add the two numbers in fx fy
_L 0x200001A0 0x46031080    //  add.s f2,f2,f3

// Restore at, jump to Y
_L 0x200001A4 0x3C010000    // lui at,0x0
_L 0x200001A8 0x0A2F1B85    // j 0x08BC6E14
_L 0x200001AC 0x00000000    // nop

// Check Analog Up
_L 0x200001B0 0x3C010880    // lui at,0x880
_L 0x200001B4 0x8C210018    // lw at,0x18(at)
_L 0x200001B8 0x802E0000    // lb t6,0x0(at)
_L 0x200001BC 0x20010005    // li at,0x5
_L 0x200001C0 0x11C10004    // beq t6,at,Check Analog Down
_L 0x200001C4 0x00000000    // nop
_L 0x200001C8 0x3C010880    // lui at,0x880
_L 0x200001CC 0xC4230000    // lwc1 f3,0x0(at)
_L 0x200001D0 0x46031080    // add.s f2,f2,f3

// Check Analog Down
_L 0x200001D4 0x3C010880    // lui at,0x880
_L 0x200001D8 0x8C21001C    // lw at,0x1C(at)
_L 0x200001DC 0x802E0000    // lb t6,0x0(at)
_L 0x200001E0 0x20010001    // li at,0x1
_L 0x200001E4 0x11C10004    // beq t6,at,Return To Y
_L 0x200001E8 0x00000000    // nop
_L 0x200001EC 0x3C010880    // lui at,0x880
_L 0x200001F0 0xC4230000    // lwc1 f3,0x0(at)
_L 0x200001F4 0x46031081    // sub.s f2,f2,f3

// Return To Y
_L 0x200001F8 0x3C010000    // lui at,0x0
_L 0x200001FC 0x0A2F1B85    // j 0x08BC6E14
_L 0x20000200 0x00000000    // nop

// Facing

// Override "facing" instructions, jump to Affect Faces
_L 0x203C716C 0x0A200081    // j 0x08800204
_L 0x203C7170 0x00000000    // nop

// Custom Function for Player Position Y Coordinate

_L 0x20000204 0x3C010880    // lui at,0x880
_L 0x20000208 0x8C210004    // lw at,0x4(at)
_L 0x2000020C 0x80210000    // lb at,0x0(at)
_L 0x20000210 0x11C00009    // beq at, zero, go to Normal face settings
_L 0x20000214 0x00000000    // nop

// Alternate face settings
_L 0x20000218 0xAC800080    // sw       zero,0x80(a0)
_L 0x2000021C 0x46034042    // mul.s    f1,f8,f3
_L 0x20000220 0xAC800084    // sw       zero,0x84(a0)
_L 0x20000224 0xE7A00044    // swc1     f0,0x44(sp)
_L 0x20000228 0x46033802    // mul.s    f0,f7,f3
_L 0x2000022C 0xAC800088    // sw       zero,0x88(a0)
_L 0x20000230 0x0A2F1C61    // j        0x08BC7184
_L 0x20000234 0x00000000    // nop

// Normal face settings
_L 0x20000238 0xE4810080    // swc1     f1,0x80(a0)
_L 0x2000023C 0x46034042    // mul.s    f1,f8,f3
_L 0x20000240 0xE4800084    // swc1     f0,0x84(a0)
_L 0x20000244 0xE7A00044    // swc1     f0,0x44(sp)
_L 0x20000248 0x46033802    // mul.s    f0,f7,f3
_L 0x2000024C 0xE4810088    // swc1     f1,0x88(a0)
_L 0x20000250 0x0A2F1C61    // j        0x08BC7184
_L 0x20000254 0x00000000    // nop

// Change "TCS Mode" text to "Slew Mode"
_L 0x20D04679 0x57454C53 //WELS
_L 0x20D0467D 0x444F4D20 //DOM 
_L 0x20D04681 0x20202045 //   E
_L 0x20D04685 0x54584500 //TXE.
_L 0x20D00260 0x41534944 //ASID
_L 0x20D00264 0x00454C42 //.ELB
_L 0x20D00268 0x45455053 //EEPS
_L 0x20D0026C 0x20312044 // 1 D
_L 0x20D00270 0x45505300 //EPS.
_L 0x20D00274 0x35204445 //5 DE
_L 0x20D00278 0x42410020 //BA. 
