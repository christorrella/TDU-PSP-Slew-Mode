_S ULUS-10249
_G Test Drive Unlimited

_C1 [PART 1] Slew Mode v0.2

// created by Christopher Torrella
// dedicated to my late Father who bought me Test Drive Unlimited when I was a kid. Love you, Dad.

// Override player positional coordinate addition instructions; instead, jump to custom X/Z/Y funcs
_L 0x203C6DD8 0x0A200408    // j        0x08801020
_L 0x203C6DF8 0x0A200431    // j        0x088010C4
_L 0x203C6E10 0x0A200458    // j        0x08801160

// Slew speed has 4 bytes reserved space at 0x08801000

// Button status address table
_L 0x20001004 0x09621F4C    // address of TCS Mode status
_L 0x20001008 0x09350444    // address of analog left status
_L 0x2000100C 0x093503F0    // address of analog right status
_L 0x20001010 0x093501A4    // address of circle status
_L 0x20001014 0x093500FC    // address of square status
_L 0x20001018 0x0935039C    // address of analog up status
_L 0x2000101C 0x09350348    // address of analog down status

// Start of control functions

// Custom Function for Player Position X Coordinate

// Write slew speed as 1x in reserved space
_L 0x20001020 0x3C010880    // lui      at,0x880
_L 0x20001024 0x3C0E3F80    // lui      t6,0x3f80
_L 0x20001028 0xAC2E1000    // sw       t6, 0x1000(at)

// If TCS is 1, jump to Check Analog Left
_L 0x2000102C 0x8C211004    // lw       at,0x1004(at)
_L 0x20001030 0x802E0000    // lb       t6,0x0(at)
_L 0x20001034 0x20010001    // li       at,0x1
_L 0x20001038 0x11C1000D    // beq      t6,at,Check Analog Left
_L 0x2000103C 0x00000000    // nop

// Write slew speed as 5x in reserved space
_L 0x20001040 0x3C010880    // lui      at,0x880
_L 0x20001044 0x3C0E40A0    // lui      t6,0x40a0
_L 0x20001048 0xAC2E1000    // sw       t6, 0x1000(at)

// If TCS is 2, jump to Check Analog Left
_L 0x2000104C 0x8C211004    // lw       at,0x1004(at)
_L 0x20001050 0x802E0000    // lb       t6,0x0(at)
_L 0x20001054 0x20010002    // li       at,0x2
_L 0x20001058 0x11C10005    // beq      t6,at,Check Analog Left
_L 0x2000105C 0x00000000    // nop

// Add the two numbers in fx, fy
_L 0x20001060 0x46020000    // add.s    f0,f0,f2

// Restore at, jump to X
_L 0x20001064 0x3C010000    // lui      at,0x0
_L 0x20001068 0x0A2F1B77    // j        0x08BC6DDC
_L 0x2000106C 0x00000000    // nop

_C1 [PART 2] NOTE: You must enable

// Check Analog Left
_L 0x20001070 0x3C010880    // lui      at,0x880
_L 0x20001074 0x8C211008    // lw       at,0x1008(at)
_L 0x20001078 0x802E0000    // lb       t6,0x0(at)
_L 0x2000107C 0x20010005    // li       at,0x5
_L 0x20001080 0x11C10004    // beq      t6,at,Check Analog Right
_L 0x20001084 0x00000000    // nop
_L 0x20001088 0x3C010880    // lui      at,0x880
_L 0x2000108C 0xC4221000    // lwc1     f2,0x1000(at)
_L 0x20001090 0x46020000    // add.s    f0,f0,f2

// Check Analog Right
_L 0x20001094 0x3C010880    // lui      at,0x880
_L 0x20001098 0x8C21100C    // lw       at,0x100C(at)
_L 0x2000109C 0x802E0000    // lb       t6,0x0(at)
_L 0x200010A0 0x20010001    // li       at,0x1
_L 0x200010A4 0x11C10004    // beq      t6,at,Return To X
_L 0x200010A8 0x00000000    // nop
_L 0x200010AC 0x3C010880    // lui      at,0x880
_L 0x200010B0 0xC4221000    // lwc1     f2,0x1000(at)
_L 0x200010B4 0x46020001    // sub.s    f0,f0,f2

// Return To X
_L 0x200010B8 0x3C010000    // lui      at,0x0
_L 0x200010BC 0x0A2F1B77    // j        0x08BC6DDC
_L 0x200010C0 0x00000000    // nop

// Custom Function for Player Position Z Coordinate

// Write slew speed as 1x in reserved space
_L 0x200010C4 0x3C010880    // lui      at,0x880
_L 0x200010C8 0x3C0E3F80    // lui      t6,0x3f80
_L 0x200010CC 0xAC2E1000    // sw       t6, 0x1000(at)

// If TCS is 1, jump to Check Circle
_L 0x200010D0 0x8C211004    // lw       at,0x1004(at)
_L 0x200010D4 0x802E0000    // lb       t6,0x0(at)
_L 0x200010D8 0x20010001    // li       at,0x1
_L 0x200010DC 0x11C1000D    // beq      t6,at,Check Circle
_L 0x200010E0 0x00000000    // nop

_C1 [PART 3] ALL of the parts 

// Write slew speed as 5x in reserved space
_L 0x200010E4 0x3C010880    // lui      at,0x880
_L 0x200010E8 0x3C0E40A0    // lui      t6,0x40a0
_L 0x200010EC 0xAC2E1000    // sw       t6, 0x1000(at)

// If TCS is 2, jump to Check Circle
_L 0x200010F0 0x8C211004    // lw       at,0x1004(at)
_L 0x200010F4 0x802E0000    // lb       t6,0x0(at)
_L 0x200010F8 0x20010002    // li       at,0x2
_L 0x200010FC 0x11C10005    // beq      t6,at,Check Circle
_L 0x20001100 0x00000000    // nop

// Add the two numbers in fx fy
_L 0x20001104 0x46031080    // add.s    f2,f2,f3

// Restore at, jump to Z
_L 0x20001108 0x3C010000    // lui      at,0x0
_L 0x2000110C 0x0A2F1B7F    // j        0x08BC6DFC
_L 0x20001110 0x00000000    // nop

// Check Circle
_L 0x20001114 0x3C010880    // lui      at,0x880
_L 0x20001118 0x8C211010    // lw       at,0x1010(at)
_L 0x2000111C 0x802E0000    // lb       t6,0x0(at)
_L 0x20001120 0x11C00004    // beq      t6,zero,Check Square
_L 0x20001124 0x00000000    // nop
_L 0x20001128 0x3C010880    // lui      at,0x880
_L 0x2000112C 0xC4231000    // lwc1     f3,0x1000(at)
_L 0x20001130 0x46031080    // add.s    f2,f2,f3

// Check Square
_L 0x20001134 0x3C010880    // lui      at,0x880
_L 0x20001138 0x8C211014    // lw       at,0x1014(at)
_L 0x2000113C 0x802E0000    // lb       t6,0x0(at)
_L 0x20001140 0x11C00004    // beq      t6,zero,Return To Z
_L 0x20001144 0x00000000    // nop
_L 0x20001148 0x3C010880    // lui      at,0x880
_L 0x2000114C 0xC4231000    // lwc1     f3,0x1000(at)
_L 0x20001150 0x46031081    // sub.s    f2,f2,f3

_C1 [PART 4] for this cheat to

// Return To Z
_L 0x20001154 0x3C010000    // lui      at,0x0
_L 0x20001158 0x0A2F1B7F    // j        0x08BC6DFC
_L 0x2000115C 0x00000000    // nop

// Custom Function for Player Position Y Coordinate

// Write slew speed as 1x in reserved space
_L 0x20001160 0x3C010880    // lui      at,0x880
_L 0x20001164 0x3C0E3F80    // lui      t6,0x3f80
_L 0x20001168 0xAC2E1000    // sw       t6, 0x1000(at)

// If TCS is 1, jump to Check Analog Up
_L 0x2000116C 0x8C211004    // lw       at,0x1004(at)
_L 0x20001170 0x802E0000    // lb       t6,0x0(at)
_L 0x20001174 0x20010001    // li       at,0x1
_L 0x20001178 0x11C1000D    // beq      t6,at,Check Analog Up
_L 0x2000117C 0x00000000    // nop

// Write slew speed as 5x in reserved space
_L 0x20001180 0x3C010880    // lui      at,0x880
_L 0x20001184 0x3C0E40A0    // lui      t6,0x40a0
_L 0x20001188 0xAC2E1000    // sw       t6, 0x1000(at)

// If TCS is 2, jump to Check Analog Up
_L 0x2000118C 0x8C211004    // lw       at,0x1004(at)
_L 0x20001190 0x802E0000    // lb       t6,0x0(at)
_L 0x20001194 0x20010002    // li       at,0x2
_L 0x20001198 0x11C10005    // beq      t6,at,Check Analog Up
_L 0x2000119C 0x00000000    // nop

// Add the two numbers in fx fy
_L 0x200011A0 0x46031080    // add.s    f2,f2,f3

// Restore at, jump to Y
_L 0x200011A4 0x3C010000    // lui      at,0x0
_L 0x200011A8 0x0A2F1B85    // j        0x08BC6E14
_L 0x200011AC 0x00000000    // nop

_C1 [PART 5] work properly.

// Check Analog Up
_L 0x200011B0 0x3C010880    // lui      at,0x880
_L 0x200011B4 0x8C211018    // lw       at,0x1018(at)
_L 0x200011B8 0x802E0000    // lb       t6,0x0(at)
_L 0x200011BC 0x20010005    // li       at,0x5
_L 0x200011C0 0x11C10004    // beq      t6,at,Check Analog Down
_L 0x200011C4 0x00000000    // nop
_L 0x200011C8 0x3C010880    // lui      at,0x880
_L 0x200011CC 0xC4231000    // lwc1     f3,0x1000(at)
_L 0x200011D0 0x46031080    // add.s    f2,f2,f3

// Check Analog Down
_L 0x200011D4 0x3C010880    // lui      at,0x880
_L 0x200011D8 0x8C21101C    // lw       at,0x101C(at)
_L 0x200011DC 0x802E0000    // lb       t6,0x0(at)
_L 0x200011E0 0x20010001    // li       at,0x1
_L 0x200011E4 0x11C10004    // beq      t6,at,Return To Y
_L 0x200011E8 0x00000000    // nop
_L 0x200011EC 0x3C010880    // lui      at,0x880
_L 0x200011F0 0xC4231000    // lwc1     f3,0x1000(at)
_L 0x200011F4 0x46031081    // sub.s    f2,f2,f3

// Return To Y
_L 0x200011F8 0x3C010000    // lui      at,0x0
_L 0x200011FC 0x0A2F1B85    // j        0x08BC6E14
_L 0x20001200 0x00000000    // nop

// Facing

// Override "facing" instructions, jump to Affect Faces
_L 0x203C716C 0x0A200481    // j        0x08801204
_L 0x203C7170 0x00000000    // nop

// Custom Function for Player Orientation ("Facing")

_L 0x20001204 0x3C010880    // lui      at,0x880
_L 0x20001208 0x8C211004    // lw       at,0x1004(at)
_L 0x2000120C 0x80210000    // lb       at,0x0(at)
_L 0x20001210 0x11C00009    // beq      at, zero, go to Normal face settings
_L 0x20001214 0x00000000    // nop

_C1 [PART 6] To use in-game, open

// Alternate face settings
_L 0x20001218 0xAC800080    // sw       zero,0x80(a0)
_L 0x2000121C 0x46034042    // mul.s    f1,f8,f3
_L 0x20001220 0xAC800084    // sw       zero,0x84(a0)
_L 0x20001224 0xE7A00044    // swc1     f0,0x44(sp)
_L 0x20001228 0x46033802    // mul.s    f0,f7,f3
_L 0x2000122C 0xAC800088    // sw       zero,0x88(a0)
_L 0x20001230 0x0A2F1C61    // j        0x08BC7184
_L 0x20001234 0x00000000    // nop

// Normal face settings
_L 0x20001238 0xE4810080    // swc1     f1,0x80(a0)
_L 0x2000123C 0x46034042    // mul.s    f1,f8,f3
_L 0x20001240 0xE4800084    // swc1     f0,0x84(a0)
_L 0x20001244 0xE7A00044    // swc1     f0,0x44(sp)
_L 0x20001248 0x46033802    // mul.s    f0,f7,f3
_L 0x2000124C 0xE4810088    // swc1     f1,0x88(a0)
_L 0x20001250 0x0A2F1C61    // j        0x08BC7184
_L 0x20001254 0x00000000    // nop

// Change "TCS Mode" text to "Slew Mode"
_L 0x20D04678 0x454C5300    //ELS.
_L 0x20D0467C 0x4F4D2057    //OM W
_L 0x20D04680 0x20204544    //  ED
_L 0x20D04684 0x58450020    //XE. 
_L 0x20D00260 0x41534944    //ASID
_L 0x20D00264 0x00454C42    //.ELB
_L 0x20D00268 0x45455053    //EEPS
_L 0x20D0026C 0x20312044    // 1 D
_L 0x20D00270 0x45505300    //EPS.
_L 0x20D00274 0x35204445    //5 DE
_L 0x20D00278 0x42410020    //BA. 

_C0 the Slew Mode menu with 
_C0 D-Pad Right during free-ride.
